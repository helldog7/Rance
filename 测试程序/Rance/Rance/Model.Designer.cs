//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_ROLE", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rance.Role), "TeamRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Rance.TeamRole), true)]
[assembly: EdmRelationshipAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_TEAM", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Rance.Team), "TeamRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Rance.TeamRole), true)]

#endregion

namespace Rance
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class RanceEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“RanceEntities”部分中的连接字符串初始化新 RanceEntities 对象。
        /// </summary>
        public RanceEntities() : base("name=RanceEntities", "RanceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 RanceEntities 对象。
        /// </summary>
        public RanceEntities(string connectionString) : base(connectionString, "RanceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 RanceEntities 对象。
        /// </summary>
        public RanceEntities(EntityConnection connection) : base(connection, "RanceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Team> Team
        {
            get
            {
                if ((_Team == null))
                {
                    _Team = base.CreateObjectSet<Team>("Team");
                }
                return _Team;
            }
        }
        private ObjectSet<Team> _Team;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TeamRole> TeamRole
        {
            get
            {
                if ((_TeamRole == null))
                {
                    _TeamRole = base.CreateObjectSet<TeamRole>("TeamRole");
                }
                return _TeamRole;
            }
        }
        private ObjectSet<TeamRole> _TeamRole;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// 用于向 Team EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTeam(Team team)
        {
            base.AddObject("Team", team);
        }
    
        /// <summary>
        /// 用于向 TeamRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTeamRole(TeamRole teamRole)
        {
            base.AddObject("TeamRole", teamRole);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RanceModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="兵种">兵种 属性的初始值。</param>
        /// <param name="攻">攻 属性的初始值。</param>
        /// <param name="防">防 属性的初始值。</param>
        /// <param name="速">速 属性的初始值。</param>
        /// <param name="智">智 属性的初始值。</param>
        /// <param name="行动点">行动点 属性的初始值。</param>
        /// <param name="兵力">兵力 属性的初始值。</param>
        /// <param name="基础攻击技能">基础攻击技能 属性的初始值。</param>
        /// <param name="技能1">技能1 属性的初始值。</param>
        /// <param name="技能2">技能2 属性的初始值。</param>
        /// <param name="被动技能">被动技能 属性的初始值。</param>
        /// <param name="特殊技能">特殊技能 属性的初始值。</param>
        public static Role CreateRole(global::System.Guid id, global::System.String name, global::System.String 兵种, global::System.Int32 攻, global::System.Int32 防, global::System.Int32 速, global::System.Int32 智, global::System.Int32 行动点, global::System.Int32 兵力, global::System.String 基础攻击技能, global::System.String 技能1, global::System.String 技能2, global::System.String 被动技能, global::System.String 特殊技能)
        {
            Role role = new Role();
            role.ID = id;
            role.Name = name;
            role.兵种 = 兵种;
            role.攻 = 攻;
            role.防 = 防;
            role.速 = 速;
            role.智 = 智;
            role.行动点 = 行动点;
            role.兵力 = 兵力;
            role.基础攻击技能 = 基础攻击技能;
            role.技能1 = 技能1;
            role.技能2 = 技能2;
            role.被动技能 = 被动技能;
            role.特殊技能 = 特殊技能;
            return role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 兵种
        {
            get
            {
                return _兵种;
            }
            set
            {
                On兵种Changing(value);
                ReportPropertyChanging("兵种");
                _兵种 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("兵种");
                On兵种Changed();
            }
        }
        private global::System.String _兵种;
        partial void On兵种Changing(global::System.String value);
        partial void On兵种Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 攻
        {
            get
            {
                return _攻;
            }
            set
            {
                On攻Changing(value);
                ReportPropertyChanging("攻");
                _攻 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("攻");
                On攻Changed();
            }
        }
        private global::System.Int32 _攻;
        partial void On攻Changing(global::System.Int32 value);
        partial void On攻Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 防
        {
            get
            {
                return _防;
            }
            set
            {
                On防Changing(value);
                ReportPropertyChanging("防");
                _防 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("防");
                On防Changed();
            }
        }
        private global::System.Int32 _防;
        partial void On防Changing(global::System.Int32 value);
        partial void On防Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 速
        {
            get
            {
                return _速;
            }
            set
            {
                On速Changing(value);
                ReportPropertyChanging("速");
                _速 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("速");
                On速Changed();
            }
        }
        private global::System.Int32 _速;
        partial void On速Changing(global::System.Int32 value);
        partial void On速Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 智
        {
            get
            {
                return _智;
            }
            set
            {
                On智Changing(value);
                ReportPropertyChanging("智");
                _智 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("智");
                On智Changed();
            }
        }
        private global::System.Int32 _智;
        partial void On智Changing(global::System.Int32 value);
        partial void On智Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 行动点
        {
            get
            {
                return _行动点;
            }
            set
            {
                On行动点Changing(value);
                ReportPropertyChanging("行动点");
                _行动点 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("行动点");
                On行动点Changed();
            }
        }
        private global::System.Int32 _行动点;
        partial void On行动点Changing(global::System.Int32 value);
        partial void On行动点Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 兵力
        {
            get
            {
                return _兵力;
            }
            set
            {
                On兵力Changing(value);
                ReportPropertyChanging("兵力");
                _兵力 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("兵力");
                On兵力Changed();
            }
        }
        private global::System.Int32 _兵力;
        partial void On兵力Changing(global::System.Int32 value);
        partial void On兵力Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 基础攻击技能
        {
            get
            {
                return _基础攻击技能;
            }
            set
            {
                On基础攻击技能Changing(value);
                ReportPropertyChanging("基础攻击技能");
                _基础攻击技能 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("基础攻击技能");
                On基础攻击技能Changed();
            }
        }
        private global::System.String _基础攻击技能;
        partial void On基础攻击技能Changing(global::System.String value);
        partial void On基础攻击技能Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 技能1
        {
            get
            {
                return _技能1;
            }
            set
            {
                On技能1Changing(value);
                ReportPropertyChanging("技能1");
                _技能1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("技能1");
                On技能1Changed();
            }
        }
        private global::System.String _技能1;
        partial void On技能1Changing(global::System.String value);
        partial void On技能1Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 技能2
        {
            get
            {
                return _技能2;
            }
            set
            {
                On技能2Changing(value);
                ReportPropertyChanging("技能2");
                _技能2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("技能2");
                On技能2Changed();
            }
        }
        private global::System.String _技能2;
        partial void On技能2Changing(global::System.String value);
        partial void On技能2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 被动技能
        {
            get
            {
                return _被动技能;
            }
            set
            {
                On被动技能Changing(value);
                ReportPropertyChanging("被动技能");
                _被动技能 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("被动技能");
                On被动技能Changed();
            }
        }
        private global::System.String _被动技能;
        partial void On被动技能Changing(global::System.String value);
        partial void On被动技能Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String 特殊技能
        {
            get
            {
                return _特殊技能;
            }
            set
            {
                On特殊技能Changing(value);
                ReportPropertyChanging("特殊技能");
                _特殊技能 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("特殊技能");
                On特殊技能Changed();
            }
        }
        private global::System.String _特殊技能;
        partial void On特殊技能Changing(global::System.String value);
        partial void On特殊技能Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_ROLE", "TeamRole")]
        public EntityCollection<TeamRole> TeamRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamRole>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "TeamRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamRole>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "TeamRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RanceModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Team 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Team CreateTeam(global::System.Guid id, global::System.String name)
        {
            Team team = new Team();
            team.ID = id;
            team.Name = name;
            return team;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_TEAM", "TeamRole")]
        public EntityCollection<TeamRole> TeamRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamRole>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "TeamRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamRole>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "TeamRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RanceModel", Name="TeamRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TeamRole 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="teamID">TeamID 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="排">排 属性的初始值。</param>
        /// <param name="列">列 属性的初始值。</param>
        public static TeamRole CreateTeamRole(global::System.Guid id, global::System.Guid teamID, global::System.Guid roleID, global::System.Int32 排, global::System.Int32 列)
        {
            TeamRole teamRole = new TeamRole();
            teamRole.ID = id;
            teamRole.TeamID = teamID;
            teamRole.RoleID = roleID;
            teamRole.排 = 排;
            teamRole.列 = 列;
            return teamRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TeamID
        {
            get
            {
                return _TeamID;
            }
            set
            {
                OnTeamIDChanging(value);
                ReportPropertyChanging("TeamID");
                _TeamID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamID");
                OnTeamIDChanged();
            }
        }
        private global::System.Guid _TeamID;
        partial void OnTeamIDChanging(global::System.Guid value);
        partial void OnTeamIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Guid _RoleID;
        partial void OnRoleIDChanging(global::System.Guid value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 排
        {
            get
            {
                return _排;
            }
            set
            {
                On排Changing(value);
                ReportPropertyChanging("排");
                _排 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("排");
                On排Changed();
            }
        }
        private global::System.Int32 _排;
        partial void On排Changing(global::System.Int32 value);
        partial void On排Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 列
        {
            get
            {
                return _列;
            }
            set
            {
                On列Changing(value);
                ReportPropertyChanging("列");
                _列 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("列");
                On列Changed();
            }
        }
        private global::System.Int32 _列;
        partial void On列Changing(global::System.Int32 value);
        partial void On列Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_ROLE", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RanceModel.FK_TEAMROLE_REFERENCE_ROLE", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RanceModel", "FK_TEAMROLE_REFERENCE_TEAM", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "Team").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("RanceModel.FK_TEAMROLE_REFERENCE_TEAM", "Team", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
